{"version":3,"sources":["componets/Button.js","config/firebase.js","login/signInWithGoogle.js","login/signOut.js","componets/Message.js","componets/Channel.js","hooks/useAuthState.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","children","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","signInWithGoogle","a","useDeviceLanguage","signInWithPopup","console","error","message","signOut","formatDate","date","formattedDate","formatRelative","Date","charAt","toUpperCase","slice","Message","createdAt","text","displayName","photoURL","src","alt","width","height","seconds","Channel","user","dummy","useRef","useState","messages","setMessages","useEffect","collection","orderBy","limit","onSnapshot","querySnapshot","data","docs","map","doc","id","uid","newMessage","setNewMessage","messagesRef","inputRef","current","focus","scrollIntoView","behavior","ref","onSubmit","e","preventDefault","trimmedMessage","trim","add","FieldValue","serverTimestamp","type","value","onChange","target","placeholder","disabled","xmlns","fill","class","viewBox","d","useAuthState","initializing","currentUser","setUser","onAuthStateChanged","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAKeA,EALA,SAAC,GAAD,QAAGC,eAAH,MAAa,KAAb,MAAmBC,gBAAnB,MAA8B,KAA9B,SACb,yBAAQC,UAAU,UAAUF,QAASA,EAArC,UACGC,EAAU,Q,4DCYZE,IAASC,cATW,CACnBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMhB,IAAMC,EAAKT,IAASU,YACdC,EAAqB,IAAIX,IAASY,KAAKC,mBCJjCC,EAbO,uCAAG,sBAAAC,EAAA,6DAErBf,IAASY,OAAOI,oBAFK,kBAMbhB,IAASY,OAAOK,gBAAgBN,GANnB,sDASnBO,QAAQC,MAAM,KAAEC,SATG,wDAAH,qDCQPC,EARF,uCAAG,sBAAAN,EAAA,+EAEFf,IAASY,OAAOS,UAFd,sDAIRH,QAAQC,MAAR,MAJQ,wDAAH,qD,QCAPG,EAAa,SAACC,GAClB,IAAIC,EAAgB,GAQpB,OAPID,IAIFC,GAFAA,EAAgBC,YAAeF,EAAM,IAAIG,OAGzBC,OAAO,GAAGC,cAAgBJ,EAAcK,MAAM,IAEzDL,GAsCMM,EAnCC,SAAC,GAKV,IAAD,IAJJC,iBAII,MAJQ,KAIR,MAHJC,YAGI,MAHG,GAGH,MAFJC,mBAEI,MAFU,GAEV,MADJC,gBACI,MADO,GACP,EACJ,OAAKF,EAGH,sBAAKjC,UAAU,KAAf,UACE,4BACGkC,EACC,8BACE,8BACGC,EACC,qBACEC,IAAKD,EACLE,IAAI,SACJrC,UAAU,oBACVsC,MAAO,GACPC,OAAQ,KAER,KAAM,OAEXL,EAZH,OAaY,OAATF,QAAS,IAATA,OAAA,EAAAA,EAAWQ,SACV,+BAAOjB,EAAW,IAAII,KAAyB,IAApBK,EAAUQ,YACnC,QAEJ,OAEN,8BAAIP,EAAJ,UAzBc,MCiGLQ,EA/GC,SAAC,GAAqB,IAAD,MAAlBC,YAAkB,MAAX,KAAW,EAC7BC,EAAQC,mBADqB,EAEHC,mBAAS,IAFN,mBAE5BC,EAF4B,KAElBC,EAFkB,KAUnCC,qBAAU,WAiBR,OAZctC,EAAGuC,WAAW,YAAYC,QAAQ,aAAaC,MAAM,KAEzCC,YAAW,SAACC,GAEpC,IAAMC,EAAOD,EAAcE,KAAKC,KAAI,SAACC,GAAD,mBAAC,eAChCA,EAAIH,QAD2B,IAElCI,GAAID,EAAIC,QAGVX,EAAYO,QAIb,IA5BgC,IA+B3BK,EAA+BjB,EAA/BiB,IAAKzB,EAA0BQ,EAA1BR,YAAaC,EAAaO,EAAbP,SA/BS,EAgCCU,mBAAS,IAhCV,mBAgC5Be,EAhC4B,KAgChBC,EAhCgB,KAsC7BC,EAAcpD,EAAGuC,WAAW,YAmB5Bc,EAAWnB,mBASjB,OARAI,qBAAU,WACJe,EAASC,SACXD,EAASC,QAAQC,UAElB,CAACF,IAGJ,UAAApB,EAAMqB,eAAN,SAAeE,eAAe,CAAEC,SAAU,WAExC,qCACE,mCACE,sEACA,cAAC,EAAD,CAAQrE,QAASwB,EAAjB,+BAGF,oCACE,iCACE,oGACA,6BACGwB,EAASU,KAAI,SAACnC,GAAD,OACZ,6BACE,cAAC,EAAD,eAAaA,KADNA,EAAQqC,SAMrB,sBAAMA,GAAG,QAAQU,IAAKzB,OAExB,uBAAM0B,SA9CW,SAACC,GACtBA,EAAEC,iBAEF,IAAMC,EAAiBZ,EAAWa,OAC9BD,IAEFV,EAAYY,IAAI,CACdzC,KAAMuC,EACNxC,UAAW/B,IAASU,UAAUgE,WAAWC,kBACzCjB,MACAzB,cACAC,aAGF0B,EAAc,MAgCZ,UACE,uBACEO,IAAKL,EACLc,KAAK,OACLC,MAAOlB,EACPmB,SAzDoB,SAACT,GAC7BA,EAAEC,iBACFV,EAAcS,EAAEU,OAAOF,QAwDfG,YAAY,kCAEd,wBAAQJ,KAAK,SAASK,UAAWtB,EAAjC,SACE,qBACEuB,MAAM,6BACN7C,MAAM,KACNC,OAAO,KACP6C,KAAK,eACLC,MAAM,oBACNC,QAAQ,YANV,SAQE,sBAAMC,EAAE,mKCrFPC,MAtBf,SAAsB3E,GAAO,IAAD,EACFgC,oBAAS,GAAxB4C,EADiB,sBAEF5C,oBAAS,kBAAMhC,EAAK6E,eAFlB,mBAElBhD,EAFkB,KAEZiD,EAFY,KAkB5B,OAdA3C,qBAAU,WAUV,OATuBnC,EAAK+E,oBAAmB,SAAAlD,GAEnCiD,EADAjD,IAGQ,QAOlB,CAAC7B,EAAM4E,IAEF,CAAC/C,OAAM+C,iBC8BCI,MA7Cf,WAAe,MAEkBL,EAAavF,IAASY,QAA7C6B,EAFK,EAELA,KAYR,OAda,EAEC+C,aAaZ,qBAAKzF,UAAU,MAAf,SACG0C,EACC,mCAEE,cAAC,EAAD,CAASA,KAAMA,MAGjB,sBAAK1C,UAAU,4CAAf,UACE,6DACA,mGACA,uBACA,eAAC,EAAD,CAAQF,QAASiB,EAAjB,UACE,qBACEoE,MAAM,6BACN7C,MAAM,KACNC,OAAO,KACP6C,KAAK,eACLC,MAAM,eACNC,QAAQ,YANV,SAQE,sBAAMC,EAAE,qXACH,IAVT,+BCnBKO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5f9152f4.chunk.js","sourcesContent":["const Button = ({ onClick = null, children = null }) => (\r\n  <button className=\"sign-in\" onClick={onClick}>\r\n    {children}{\" \"}\r\n  </button>\r\n);\r\nexport default Button;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\n//inicializar farebase  \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCPTG8IYFz5XHvu3PKv72RQEkRFTpVmM_g\",\r\n    authDomain: \"firechat-test-73281.firebaseapp.com\",\r\n    projectId: \"firechat-test-73281\",\r\n    storageBucket: \"firechat-test-73281.appspot.com\",\r\n    messagingSenderId: \"357317668600\",\r\n    appId: \"1:357317668600:web:f3fc653b583c39e78e550d\",\r\n    measurementId: \"G-J0CBREM2GG\"\r\n  };\r\n   firebase.initializeApp(firebaseConfig);\r\n\r\n   //Tomo los elementos basicos para trabajar con firebase.\r\n\r\n   const db = firebase.firestore();\r\n   const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n   \r\n   export {\r\n       db,\r\n       googleAuthProvider,\r\n       firebase\r\n   }","import {googleAuthProvider, firebase} from '../config/firebase';\r\n\r\nconst signInWithGoogle = async () => {\r\n    //coloca el lenguaje de preferencia del dispositivo\r\n    firebase.auth().useDeviceLanguage();\r\n\r\n    //Inicio el procedo de login dentro de try ... catch\r\n    try{\r\n      await firebase.auth().signInWithPopup(googleAuthProvider);\r\n\r\n    } catch (e) {\r\n      console.error(e.message);\r\n        }\r\n  };\r\n\r\nexport default signInWithGoogle;","import {firebase} from '../config/firebase';\r\n\r\nconst signOut = async () =>{\r\n    try {\r\n        await firebase.auth().signOut();\r\n    }catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nexport default signOut;","import { formatRelative } from \"date-fns\";\r\n\r\nconst formatDate = (date) => {\r\n  let formattedDate = \"\";\r\n  if (date) {\r\n    //Convert the date in words relative to the current date\r\n    formattedDate = formatRelative(date, new Date());\r\n    //Uppercase the first letter\r\n    formattedDate =\r\n      formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\r\n  }\r\n  return formattedDate;\r\n};\r\n\r\nconst Message = ({\r\n  createdAt = null,\r\n  text = \"\",\r\n  displayName = \"\",\r\n  photoURL = \"\",\r\n}) => {\r\n  if (!text) return null;\r\n\r\n  return (\r\n    <div className=\"mj\">\r\n      <b>\r\n        {displayName ? (\r\n          <p>\r\n            <p>\r\n              {photoURL ? (\r\n                <img\r\n                  src={photoURL}\r\n                  alt=\"Avatar\"\r\n                  className=\"rounded-full mr-a\"\r\n                  width={45}\r\n                  height={45}\r\n                />\r\n              ) : null}{\" \"}\r\n            </p>\r\n            {displayName}...\r\n            {createdAt?.seconds ? (\r\n              <span>{formatDate(new Date(createdAt.seconds * 1000))}</span>\r\n            ) : null}\r\n          </p>\r\n        ) : null}\r\n      </b>\r\n      <p>{text} </p>\r\n    </div>\r\n  );\r\n};\r\nexport default Message;\r\n","import { signOut } from \"../login\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { db, firebase } from \"../config/firebase\";\r\nimport Message from \"./Message\";\r\nimport Button from \"./Button\";\r\n\r\nconst Channel = ({ user = null }) => {\r\n  const dummy = useRef();\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  // const scroll = () => {\r\n  //   const elemento = document.getElementById(\"chats\");\r\n  //   elemento?.scrollIntoView(\"smooth\", \"start\");\r\n  // };\r\n\r\n  //Necesito cargar los mensajes desde la BD\r\n  useEffect(() => {\r\n    /*\r\n  Crear el query de los mensajes,\r\n  Cargar 100 mensajes ordenados por fecha.\r\n  */\r\n    const query = db.collection(\"messages\").orderBy(\"createdAt\").limit(100);\r\n\r\n    const unsubscribe = query.onSnapshot((querySnapshot) => {\r\n      //Obtiene todos los mensajes desde la bd con su ID.\r\n      const data = querySnapshot.docs.map((doc) => ({\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      }));\r\n      //Actualizo os mensajes obtenidos desde la bd.\r\n      setMessages(data);\r\n    });\r\n    //Clean Up\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  //Codigo para agregar nuevos mensajes\r\n  const { uid, displayName, photoURL } = user;\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  const handleMessageOnChange = (e) => {\r\n    e.preventDefault();\r\n    setNewMessage(e.target.value);\r\n  };\r\n  const messagesRef = db.collection(\"messages\");\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const trimmedMessage = newMessage.trim();\r\n    if (trimmedMessage) {\r\n      //Add new message in Firestore\r\n      messagesRef.add({\r\n        text: trimmedMessage,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid,\r\n        displayName,\r\n        photoURL,\r\n      });\r\n      //Clear input field\r\n      setNewMessage(\"\");\r\n    }\r\n  };\r\n  const inputRef = useRef();\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [inputRef]);\r\n\r\n  // scroll();\r\n  dummy.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  return (\r\n    <>\r\n      <header>\r\n        <h1>⚛️🔥💬</h1>\r\n        <Button onClick={signOut}> Logout Google</Button>\r\n      </header>\r\n\r\n      <section>\r\n        <main>\r\n          <h1>💬⚛ Bienvenidos a React-FireChat ⚛💬</h1>\r\n          <ul>\r\n            {messages.map((message) => (\r\n              <li key={message.id}>\r\n                <Message {...message} />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <span id=\"chats\" ref={dummy}></span>\r\n        </main>\r\n        <form onSubmit={handleOnSubmit}>\r\n          <input\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={handleMessageOnChange}\r\n            placeholder=\"Escribe tu mensaje aquí...\"\r\n          />\r\n          <button type=\"submit\" disabled={!newMessage}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              fill=\"currentColor\"\r\n              class=\"bi bi-cursor-fill\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M14.082 2.182a.5.5 0 0 1 .103.557L8.528 15.467a.5.5 0 0 1-.917-.007L5.57 10.694.803 8.652a.5.5 0 0 1-.006-.916l12.728-5.657a.5.5 0 0 1 .556.103z\" />\r\n            </svg>\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default Channel;\r\n","import { useState, useEffect } from 'react'; \r\n\r\nfunction useAuthState(auth) {\r\n    const [initializing]= useState(true);\r\n    const[user, setUser]= useState(() => auth.currentUser);\r\n\r\nuseEffect(() => {\r\n    const unsubcribe = auth.onAuthStateChanged(user =>{\r\n        if (user) {\r\n            setUser(user);\r\n        }else {\r\n            setUser(false);\r\n        }\r\n\r\n    });\r\n//Cleanup subdscription\r\nreturn unsubcribe;\r\n    \r\n},[auth, initializing]);\r\n\r\nreturn {user, initializing};\r\n\r\n}\r\n\r\nexport default useAuthState;","import { Button, Channel } from \"./componets\";\r\nimport { signInWithGoogle, signOut } from \"./login\";\r\nimport { useAuthState } from \"./hooks\";\r\nimport { firebase } from \"./config/firebase\";\r\n\r\nfunction App() {\r\n  //Entegracion del hook useAuthState\r\n  const { user, initializing } = useAuthState(firebase.auth());\r\n  // Renderizar el componente Button\r\n  //Renderezar en funcion de la existencia de un usuario con operador ternario.\r\n  const renderLoging = () => {\r\n    if (initializing) {\r\n      return (\r\n        <div>\r\n          <h1>Loading...</h1>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      {user ? (\r\n        <>\r\n          {/* <Button onClick={signOut}> Logout Google</Button> */}\r\n          <Channel user={user} />\r\n        </>\r\n      ) : (\r\n        <div className=\"shadow-lg p-3 mb-5 bg-body rounded inicio\">\r\n          <h1>🔥 React FireChat</h1>\r\n          <h3>La forma más fácil de chatear con personas de todo el mundo</h3>\r\n          <br />\r\n          <Button onClick={signInWithGoogle}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"25\"\r\n              height=\"20\"\r\n              fill=\"currentColor\"\r\n              class=\"bi bi-google\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M15.545 6.558a9.42 9.42 0 0 1 .139 1.626c0 2.434-.87 4.492-2.384 5.885h.002C11.978 15.292 10.158 16 8 16A8 8 0 1 1 8 0a7.689 7.689 0 0 1 5.352 2.082l-2.284 2.284A4.347 4.347 0 0 0 8 3.166c-2.087 0-3.86 1.408-4.492 3.304a4.792 4.792 0 0 0 0 3.063h.003c.635 1.893 2.405 3.301 4.492 3.301 1.078 0 2.004-.276 2.722-.764h-.003a3.702 3.702 0 0 0 1.599-2.431H8v-3.08h7.545z\" />\r\n            </svg>{\" \"}\r\n            Sing in with Google\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}